{"version":3,"sources":["../es2015/src/generator.js"],"names":["toIterable","sequence","obj","Symbol","iterator","keys","Object","i","next","j","value","key","done","length","funcs","list","index","n","call"],"mappings":";;;;;QAMgBA,U,GAAAA,U;QAuBCC,Q,GAAAA,Q;;AA7BjB;;mDA6BiBA,Q;;AA3BjB;;;;AAIO,SAASD,UAAT,CAAoBE,GAApB,EAAyB;AAC5BA,QAAIC,OAAOC,QAAX,IAAuB,YAAM;AACzB,YAAIC,OAAOC,OAAOD,IAAP,CAAYH,GAAZ,CAAX;AACA,YAAIK,IAAI,CAAC,CAAT;AACA,eAAO;AACHC,gBADG,kBACI;AACH,oBAAIC,IAAI,EAAEF,CAAV;AACA,uBAAO;AACHG,2BAAO;AACHC,6BAAKN,KAAKI,CAAL,CADF;AAEHC,+BAAOR,IAAIG,KAAKI,CAAL,CAAJ;AAFJ,qBADJ;AAKHG,0BAAML,MAAMF,KAAKQ;AALd,iBAAP;AAOH;AAVE,SAAP;AAYH,KAfD;AAgBH;;AAED;;;;AAIO,SAAUZ,QAAV;AAAA,sCAAsBa,KAAtB;AAAsBA,aAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,aACYD,KADZ;AAECE,yBAFD,GAES,CAFT;AAGGC,qBAHH,GAGOF,KAAKF,MAHZ;;AAAA;AAAA,0BAIIG,QAAQC,CAJZ;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAQOF,KAAKC,OAAL,EAAcE,IAAd,EARP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generator.js","sourceRoot":"es2015","sourcesContent":["import 'babel-polyfill';\r\n\r\n/**\r\n * Même exercice que pour iterator\r\n * Mais en utilisant un generator\r\n */\r\nexport function toIterable(obj) {\r\n    obj[Symbol.iterator] = () => {\r\n        let keys = Object.keys(obj);\r\n        let i = -1;\r\n        return {\r\n            next() {\r\n                let j = ++i;\r\n                return {\r\n                    value: {\r\n                        key: keys[j],\r\n                        value: obj[keys[j]]\r\n                    },\r\n                    done: i === keys.length\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * exécuter toutes les fonctions et retourner les resultats \r\n * sous forme d'iterator grâce au mot clé yield\r\n */\r\nexport function* sequence(...funcs) {\r\n    let list = [...funcs];\r\n    var index = 0;\r\n    const n = list.length;\r\n    while (index < n) {\r\n        /* index++;\r\n        yield list[index].call();\r\n        */\r\n        yield list[index++].call();\r\n    }\r\n}"]}