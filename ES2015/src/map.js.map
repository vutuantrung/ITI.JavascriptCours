{"version":3,"sources":["../es2015/src/map.js"],"names":["TextIndexer","map","Map","text","reg","arr","replace","toLowerCase","split","forEach","get","e","undefined","set","times","word"],"mappings":";;;;;;;;;;AAAA;;;IAGaA,W,WAAAA,W;AACT,2BAAc;AAAA;;AACV,aAAKC,GAAL,GAAW,IAAIC,GAAJ,EAAX;AACH;;AAED;;;;;;;;;;kCAMUC,I,EAAM;AAAA;;AACZ,gBAAIC,MAAM,4BAAV;AACA,gBAAIC,MAAMF,KAAKG,OAAL,CAAaF,GAAb,EAAkB,EAAlB,EAAsBG,WAAtB,GAAoCC,KAApC,CAA0C,GAA1C,CAAV;AACAH,gBAAII,OAAJ,CAAY,aAAK;AACb,oBAAG,MAAKR,GAAL,CAASS,GAAT,CAAaC,CAAb,MAAoBC,SAAvB,EAAiC;AAC7B,0BAAKX,GAAL,CAASY,GAAT,CAAaF,CAAb,EAAgB,CAAhB;AACH,iBAFD,MAEK;AACD,wBAAIG,QAAQ,MAAKb,GAAL,CAASS,GAAT,CAAaC,CAAb,CAAZ;AACAG;AACA,0BAAKb,GAAL,CAASY,GAAT,CAAaF,CAAb,EAAgBG,KAAhB;AACH;AACJ,aARD;AASH;;AAED;;;;;;kCAGUC,I,EAAM;AACZ,mBAAO,KAAKd,GAAL,CAASS,GAAT,CAAaK,IAAb,CAAP;AACH;;AAED;;;;;;4BAGY,CAAE","file":"map.js","sourceRoot":"es2015","sourcesContent":["/**\r\n * La classe TextIndexer permet d'indexer du text via la méthode indexText\r\n */\r\nexport class TextIndexer {\r\n    constructor() {\r\n        this.map = new Map();\r\n    }\r\n\r\n    /**\r\n     * Permet d'indexer du texte. Chaque mot doit être rangé dans un Map.\r\n     * Le map doit contenir tous les mots rencontrés associé au nombre de fois que le mot à été rencontré dans le texte.\r\n     * Les fonctions String.split() et String.replace vous seront utiles !\r\n     * @param text Le texte source à indexer\r\n     */\r\n    indexText(text) {\r\n        let reg = /[&\\/\\\\#,+()$~%.'\":*?<>{}]/g;\r\n        let arr = text.replace(reg, '').toLowerCase().split(' ');\r\n        arr.forEach(e => {\r\n            if(this.map.get(e) === undefined){\r\n                this.map.set(e, 1);\r\n            }else{\r\n                let times = this.map.get(e);\r\n                times++;\r\n                this.map.set(e, times);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Le poids d'un mot correspond au nombre de fois qu'il à été rencontré dans le texte.\r\n     */\r\n    getWeight(word) {\r\n        return this.map.get(word);\r\n    }\r\n\r\n    /**\r\n     * retourne le nombre de mots indexés\r\n     */\r\n    get count() {}\r\n}\r\n\r\n"]}